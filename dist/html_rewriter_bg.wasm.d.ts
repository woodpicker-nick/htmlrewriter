/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_element_free(a: number): void;
export function element_before(a: number, b: number, c: number, d: number): void;
export function element_after(a: number, b: number, c: number, d: number): void;
export function element_replace(a: number, b: number, c: number, d: number): void;
export function element_remove(a: number): void;
export function element_removed(a: number): number;
export function element_tag_name(a: number, b: number): void;
export function element_set_tag_name(a: number, b: number, c: number): void;
export function element_namespace_uri(a: number): number;
export function element_attributes(a: number): number;
export function element_getAttribute(a: number, b: number, c: number): number;
export function element_hasAttribute(a: number, b: number, c: number): number;
export function element_setAttribute(a: number, b: number, c: number, d: number, e: number): void;
export function element_removeAttribute(a: number, b: number, c: number): void;
export function element_prepend(a: number, b: number, c: number, d: number): void;
export function element_append(a: number, b: number, c: number, d: number): void;
export function element_setInnerContent(a: number, b: number, c: number, d: number): void;
export function element_removeAndKeepContent(a: number): void;
export function element_onEndTag(a: number, b: number): void;
export function __wbg_documentend_free(a: number): void;
export function documentend_append(a: number, b: number, c: number, d: number): void;
export function __wbg_doctype_free(a: number): void;
export function doctype_name(a: number): number;
export function doctype_public_id(a: number): number;
export function doctype_system_id(a: number): number;
export function __wbg_htmlrewriter_free(a: number): void;
export function htmlrewriter_new(a: number, b: number): number;
export function htmlrewriter_on(a: number, b: number, c: number, d: number): void;
export function htmlrewriter_onDocument(a: number, b: number): void;
export function htmlrewriter_write(a: number, b: number, c: number): void;
export function htmlrewriter_end(a: number): void;
export function htmlrewriter_asyncify_stack_ptr(a: number): number;
export function __wbg_comment_free(a: number): void;
export function comment_before(a: number, b: number, c: number, d: number): void;
export function comment_after(a: number, b: number, c: number, d: number): void;
export function comment_replace(a: number, b: number, c: number, d: number): void;
export function comment_remove(a: number): void;
export function comment_removed(a: number): number;
export function comment_text(a: number, b: number): void;
export function comment_set_text(a: number, b: number, c: number): void;
export function __wbg_endtag_free(a: number): void;
export function endtag_name(a: number, b: number): void;
export function endtag_set_name(a: number, b: number, c: number): void;
export function endtag_before(a: number, b: number, c: number, d: number): void;
export function endtag_after(a: number, b: number, c: number, d: number): void;
export function endtag_remove(a: number): void;
export function __wbg_textchunk_free(a: number): void;
export function textchunk_before(a: number, b: number, c: number, d: number): void;
export function textchunk_after(a: number, b: number, c: number, d: number): void;
export function textchunk_replace(a: number, b: number, c: number, d: number): void;
export function textchunk_remove(a: number): void;
export function textchunk_removed(a: number): number;
export function textchunk_text(a: number, b: number): void;
export function textchunk_last_in_text_node(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
